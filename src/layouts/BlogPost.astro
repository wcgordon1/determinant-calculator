---
import Layout from './Layout.astro';
import { getReadingTime } from '../utils/blogHelpers';
import { formatDate } from '../utils/dateFormatter';
import TableOfContents from '../components/TableOfContents.astro';
import SocialShare from '../components/SocialShare.astro';
import { PrintButton } from '../components/PrintButton';
import Breadcrumbs from '../components/Breadcrumbs.astro';
import { getCollection } from 'astro:content';
import RelatedPosts from '../components/RelatedPosts.astro';

interface Props {
  frontmatter: {
    title: string;
    description: string;
    date: Date;
    tags?: string[];
  };
  headings: Array<{
    depth: number;
    slug: string;
    text: string;
  }>;
}

const { frontmatter, headings } = Astro.props;
const { title, description, date, tags } = frontmatter;
const formattedDate = formatDate(date);

// Generate breadcrumb items
const breadcrumbItems = [
  { name: 'Home', href: '/' },
  { name: 'Blog', href: '/blog' },
  { name: title, href: Astro.url.pathname }
];

const readingTime = getReadingTime(description || '');

// Get related posts from collection
const allPosts = await getCollection('blog');
const relatedPosts = allPosts
  .filter(post => 
    post.slug !== Astro.url.pathname.split('/').pop() && 
    post.data.tags?.some(tag => tags?.includes(tag))
  )
  .slice(0, 3);
---

<Layout title={title} description={description}>
  <article class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <Breadcrumbs items={breadcrumbItems} />
    
    <div class="lg:grid lg:grid-cols-[1fr_300px] gap-8">
      <div class="bg-white rounded-xl shadow-lg p-8">
        <div id="blog-content">
          <header class="mb-8 border-b border-primary-100 pb-8">
            <h1 class="text-4xl font-bold text-primary-800 mb-4">{title}</h1>
            <p class="text-lg text-gray-600 mb-4">{description}</p>
            <div class="flex items-center text-sm text-primary-600 font-medium space-x-4">
              <time>{formattedDate}</time>
              <span>â€¢</span>
              <span>{readingTime}</span>
            </div>
            {tags && (
              <div class="flex gap-2 mb-8">
                {tags.map(tag => (
                  <span class="bg-primary-100 text-primary-800 text-sm px-2 py-1 rounded">
                    {tag}
                  </span>
                ))}
              </div>
            )}
            <div class="mt-4">
              <PrintButton client:load contentId="blog-content" title={title} />
            </div>
          </header>
          <div class="prose prose-lg prose-primary max-w-none">
            <slot />
          </div>
        </div>
      </div>

      <aside class="hidden lg:block">
        <TableOfContents headings={headings} />
      </aside>
    </div>

    <div class="no-print mt-8">
      <SocialShare 
        url={Astro.url.href}
        title={title}
        description={description}
      />
      <RelatedPosts posts={relatedPosts} />
    </div>
  </article>
</Layout>

<style is:global>
  @media print {
    .no-print {
      display: none !important;
    }
  }

  /* Prose Styles */
  .prose {
    color: #374151;
    max-width: 65ch;
  }
  .prose [class~="lead"] {
    color: #4b5563;
    font-size: 1.25em;
    line-height: 1.6;
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }
  .prose a {
    color: #6d28d9;
    text-decoration: underline;
    font-weight: 500;
  }
  .prose strong {
    color: #111827;
    font-weight: 600;
  }
  .prose ol {
    counter-reset: list-counter;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }
  .prose ol > li {
    position: relative;
    counter-increment: list-counter;
    padding-left: 1.75em;
  }
  .prose ol > li::before {
    content: counter(list-counter) ".";
    position: absolute;
    font-weight: 400;
    color: #6b7280;
    left: 0;
  }
  .prose ul > li {
    position: relative;
    padding-left: 1.75em;
  }
  .prose ul > li::before {
    content: "";
    position: absolute;
    background-color: #d1d5db;
    border-radius: 50%;
    width: 0.375em;
    height: 0.375em;
    top: calc(0.875em - 0.1875em);
    left: 0.25em;
  }
  .prose hr {
    border-color: #e5e7eb;
    border-top-width: 1px;
    margin-top: 3em;
    margin-bottom: 3em;
  }
  .prose blockquote {
    font-weight: 500;
    font-style: italic;
    color: #111827;
    border-left-width: 0.25rem;
    border-left-color: #e5e7eb;
    quotes: "\201C""\201D""\2018""\2019";
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-left: 1em;
  }
  .prose h1 {
    color: #111827;
    font-weight: 800;
    font-size: 2.25em;
    margin-top: 0;
    margin-bottom: 0.8888889em;
    line-height: 1.1111111;
  }
  .prose h2 {
    color: #111827;
    font-weight: 700;
    font-size: 1.5em;
    margin-top: 2em;
    margin-bottom: 1em;
    line-height: 1.3333333;
  }
  .prose h3 {
    color: #111827;
    font-weight: 600;
    font-size: 1.25em;
    margin-top: 1.6em;
    margin-bottom: 0.6em;
    line-height: 1.6;
  }
  .prose code {
    color: #111827;
    font-weight: 600;
    font-size: 0.875em;
    background-color: #f3f4f6;
    padding: 0.25em 0.5em;
    border-radius: 0.375rem;
  }
  .prose pre {
    color: #e5e7eb;
    background-color: #1f2937;
    overflow-x: auto;
    font-size: 0.875em;
    line-height: 1.7142857;
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
    border-radius: 0.375rem;
    padding: 0.8571429em 1.1428571em;
  }
  .prose pre code {
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: 400;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
  }
  .prose table {
    width: 100%;
    table-layout: auto;
    text-align: left;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: 0.875em;
    line-height: 1.7142857;
  }
  .prose thead {
    color: #111827;
    font-weight: 600;
    border-bottom-width: 1px;
    border-bottom-color: #d1d5db;
  }
  .prose thead th {
    vertical-align: bottom;
    padding-right: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-left: 0.5714286em;
  }
  .prose tbody tr {
    border-bottom-width: 1px;
    border-bottom-color: #e5e7eb;
  }
  .prose tbody tr:last-child {
    border-bottom-width: 0;
  }
  .prose tbody td {
    vertical-align: top;
    padding: 0.5714286em;
  }
</style>