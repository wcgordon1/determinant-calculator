---
interface BlogPost {
  slug: string;
  data: {
    title: string;
    description: string;
    date: Date;
    tags?: string[];
  };
}

interface Props {
  posts: BlogPost[];
}

const { posts } = Astro.props;
import { formatDate } from '../utils/dateFormatter';
---

{posts.length > 0 && (
  <div class="mt-12 border-t border-primary-100 pt-8">
    <h2 class="text-2xl font-bold text-primary-800 mb-6">Related Articles</h2>
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
      {posts.map(post => (
        <a href={`/blog/${post.slug}`} class="group bg-primary-50/50 rounded-xl shadow-sm hover:shadow-md transition-all duration-300 overflow-hidden">
          <article class="p-6">
            <h3 class="text-xl font-bold text-primary-800 group-hover:text-primary-600 mb-2 line-clamp-2">
              {post.data.title}
            </h3>
            <p class="text-gray-600 mb-4 line-clamp-2">
              {post.data.description}
            </p>
            <div class="flex items-center justify-between">
              <time class="text-sm text-primary-600 font-medium">
                {formatDate(post.data.date)}
              </time>
              {post.data.tags && (
                <div class="flex gap-2">
                  {post.data.tags.slice(0, 2).map(tag => (
                    <span class="text-xs bg-white text-primary-700 px-2 py-1 rounded-full">
                      {tag}
                    </span>
                  ))}
                  {post.data.tags.length > 2 && (
                    <span class="text-xs text-primary-600">+{post.data.tags.length - 2}</span>
                  )}
                </div>
              )}
            </div>
          </article>
        </a>
      ))}
    </div>
  </div>
)}